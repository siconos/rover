# Copyright (C) INRIA 1999-2005
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 as published
# by the Free Software Foundation.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
# Public License for more details.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
# 
# Author(s): Jianhui YANG
# Affiliation(s): INRIA, team BIPOP
# Email(s): jianhui.yang@inrialpes.fr
#

# kinematic data for the Mars Rover
#
# 
#
# 

# solids number
NSOL := 16:

# degrees of freedom number
NDDL := 21:

#generalized coordinates and velocity definition
q := vector(NDDL):
qdot := vector(NDDL):

# l = vector of mechanical lenghts


#Cardan Rotation: We begin with the rotation around z, then around y then
#around x

# Frame 1 : Mass center: Orientation and position
ref_1	:= 0:
z_1 := q[6]:   #rotation along x,y,z aixs
y_1 := q[5]:
x_1 := q[4]:
Tx_1 := q[1]:  #location of the rover
Ty_1 := q[2]:
Tz_1 := q[3]:

# Frame 2 : Axle F (Front)
ref_2	:= 1:
z_2	:= 0:
y_2	:= 0:
x_2	:= q[7]:  #have a rotation freedom in x direction
Tx_2	:= 62:    #translation vector from its reference solid (solid 1)
Ty_2	:= -10:  
Tz_2	:= 0:

# Frame 3 : Steering Axle FL (Front Left)
ref_3	:= 2:
z_3	:= 0:
y_3	:= q[8]:  #Have a roataion degree of freedom in y direction
x_3	:= 0:    
Tx_3	:= 0:     #translation vector from its reference solid(Solid 2)
Ty_3	:= 0:
Tz_3	:= -53:

# Frame 4 : Steering Axle FR (Front Right)
ref_4	:= 2:
z_4	:= 0:
y_4	:= q[9]:
x_4	:= 0:
Tx_4	:= 0:
Ty_4	:= 0:
Tz_4	:= 53:

# Frame 5 : Wheel FL
ref_5	:= 3:
z_5	:= q[10]:
y_5	:= 0:
x_5	:= 0:
Tx_5	:= 0:
Ty_5	:= -15:
Tz_5	:= 0:

# Frame 6 : Wheel FR 
ref_6	:= 4:
z_6	:= q[11]:
y_6	:= 0:
x_6	:= 0:
Tx_6	:= 0:
Ty_6	:= -15:
Tz_6	:= 0:

# Frame 7 : Axle BL
ref_7	:= 1:
z_7	:= q[12]:
y_7	:= 0:
x_7	:= 0:
Tx_7	:= -40:
Ty_7	:= -10:
Tz_7	:= -53:

# Frame 8 : Steering Axle ML 
ref_8	:= 7:
z_8	:= 0:
y_8	:= q[13]:
x_8	:= 0:
Tx_8	:= 30:
Ty_8	:= 0:
Tz_8	:= 0:

# Frame 9 : Steering Axle BL 
ref_9	:= 7:
z_9	:= 0:
y_9	:= q[14]:
x_9	:= 0:
Tx_9	:= -30:
Ty_9	:= 0:
Tz_9	:= 0:

# Frame 10 : Wheel ML 
ref_10	:= 8:
z_10	:= q[15]:
y_10	:= 0:
x_10	:= 0:
Tx_10	:= 0:
Ty_10	:= -15:
Tz_10	:= 0:

# Frame 11 : Wheel BL 
ref_11	:= 9:
z_11	:= q[16]:
y_11	:= 0:
x_11	:= 0:
Tx_11	:= 0:
Ty_11	:= -15:
Tz_11	:= 0:

# Frame 12 : Axle BR
ref_12	:= 1:
z_12	:= q[17]:
y_12	:= 0:
x_12	:= 0:
Tx_12	:= -40:
Ty_12	:= -10:
Tz_12	:= 53:

# Frame 13 : Steering Axle MR 
ref_13	:= 12:
z_13	:= 0:
y_13	:= q[18]:
x_13	:= 0:
Tx_13	:= 30:
Ty_13	:= 0:
Tz_13	:= 0:

# Frame 14 : Steering Axle BR 
ref_14	:= 12:
z_14	:= 0:
y_14	:= q[19]:
x_14	:= 0:
Tx_14	:= -30:
Ty_14	:= 0:
Tz_14	:= 0:

# Frame 15 : Wheel MR 
ref_15	:= 13:
z_15	:= q[20]:
y_15	:= 0:
x_15	:= 0:
Tx_15	:= 0:
Ty_15	:= -15:
Tz_15	:= 0:

# Frame 16 : Wheel BR 
ref_16	:= 14:
z_16	:= q[21]:
y_16	:= 0:
x_16	:= 0:
Tx_16	:= 0:
Ty_16	:= -15:
Tz_16	:= 0:





printf("KinematicData Loading Complete");

